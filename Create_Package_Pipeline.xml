<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
      <hint>SURVIVABLE_NONATOMIC</hint>
    </org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.7"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
    <script>pipeline
{
    options 
	{
        timeout(time: 5 , unit: &apos;MINUTES&apos;)
    }
    agent 
	{
        node 
		{
            label &apos;RRMacZOS_CMN&apos;
        }
    }
    environment
    {
        WS = &apos;/u/CMN/jenkins/pipelines/CrePkgPipe&apos;
    }
    stages
	{
        stage(&quot;1&quot;)
		{
            steps
			{
                ws(&quot;${env.WS}/${env.BUILD_ID}&quot;)
				{
                    withEnv([&apos;APPLID=&quot;PLAY&quot;&apos;, 
							&apos;WREQ=&quot;N/A&quot;&apos;, 
							&apos;CMNSYS=&quot;P&quot;&apos;,
 							&apos;REQRNM=&quot;Jenkins&quot;&apos;,
							&apos;REQRPH=&quot;n/a&quot;&apos;, 
							&apos;PKTYPE=1&apos;, 
							&apos;PKLVL=1&apos;, 
							&apos;SITE1=MVS1&apos;,
                            &apos;IACNM1=&quot;Jenkins&quot;&apos;, 
							&apos;IACPH1=&quot;n/a&quot;&apos;,
							&apos;ICTNM1=&quot;Jenkins&quot;&apos;, 
							&apos;ICTPH1=&quot;n/a&quot;&apos;,
                            &apos;INSDT1=20181231&apos;, 
							&apos;IFRTM1=1004&apos;, 
 							&apos;ITOTM1=1030&apos;, 
                            &apos;WAIT_FOR_JOB=180&apos;, 
                            &apos;ALVL=PROD&apos;, /* TSO DSN Allocate script level (TEST/HOLD/PROD) */
							&apos;DLVL=PROD&apos;, /* Archival dataset specifications script level (TEST/HOLD/PROD) */
							&apos;FLVL=PROD&apos;, /* Copy / Error processing on batch job completion script level (TEST/HOLD/PROD) */
                            &apos;_BPXK_AUTOCVT=ON&apos;, 
							&apos;PIPELINE=Y&apos;])
					{
                        sh &apos;printenv&apos;
                        //call create package
                        sh returnStdout: true, script: &apos;/bin/sh -ex /usr/lpp/ispw/SUTL/scripts/PROD/ChangeMan.sh CREPKG&apos;
                	    archiveArtifacts allowEmptyArchive: true, artifacts: &apos;*.log,*.rslt,*.tstamp,*.out&apos;, caseSensitive: true, defaultExcludes: true, fingerprint: false, onlyIfSuccessful: false 
					}
                }
            }
        }
    }
	post
	{
		always
		{
		    /* I suspect this doesn&apos;t work because the post{} processing commands are
		    ** are executing in the @TMP directory. Thus the deleteDir() can&apos;t delete
		    ** files because they are active.
		    */
			dir(&quot;${env.WS}/${env.BUILD_ID}@TMP&quot;)
			{
				deleteDir() /* clean up temp dir */
			}
			echo &apos;Pipeline complete&apos;
		}
		success
		{
			dir(&quot;${env.WS}/${env.BUILD_ID}&quot;)
			{
				deleteDir() /* clean up workspace */
			}
			echo &apos;Successful execution&apos;
		}
		failure
		{
			echo &apos;Pipeline failure: uss workspace (${env.WS}/${env.BUILD_ID}) datasets have not been deleted&apos;
		}
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>